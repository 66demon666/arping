unit pcap;

interface

uses
  PcapTypes, System.Generics.Collections;

type
  TPcapInterfaces = array of TPcap_if;

  TPcap = class
  protected
    FErrbuf: TPcapErrbuf;
    FAllDevices: TPcap_if;
    function FindAllDevices(): TPcapInterfaces;

  public
    FInterfaces: TList<TPcap_if>;

    constructor Create(); virtual;

  end;

implementation

constructor TPcap.Create;
begin

end;

function TPcap.FindAllDevices: TPcapInterfaces;
var
  interfaceList: TList<TPcap_if>;
begin
  if pcap_findalldevs_ex(PCAP_SRC_IF_STRING, nil, @FAllDevices, @FErrbuf) = -1
  then
    Result := nil
  else
  begin
    while Assigned(FAllDevices.next) do
    begin
      interfaceList := TList<TPcap_if>.Create;
      interfaceList.Add(FAllDevices);
      FAllDevices := FAllDevices.next^;
    end;
  end;
end;

end.
